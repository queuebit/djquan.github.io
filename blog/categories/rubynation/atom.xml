<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyNation | Daniel Quan]]></title>
  <link href="http://djquan.github.io/blog/categories/rubynation/atom.xml" rel="self"/>
  <link href="http://djquan.github.io/"/>
  <updated>2013-06-16T16:34:53-04:00</updated>
  <id>http://djquan.github.io/</id>
  <author>
    <name><![CDATA[Daniel Quan]]></name>
    <email><![CDATA[djquan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby Nation, Day II]]></title>
    <link href="http://djquan.github.io/blog/2013/06/15/rubynation-day-ii/"/>
    <updated>2013-06-15T12:21:00-04:00</updated>
    <id>http://djquan.github.io/blog/2013/06/15/rubynation-day-ii</id>
    <content type="html"><![CDATA[<p>Kerri Miller spoke about measurement tools. Slides <a href="https://speakerdeck.com/kerrizor/you-cant-miss-what-you-cant-measure">here</a>. An interesting tool is <a href="http://ruby.sadi.st/Ruby_Sadist.html">flog</a> which grades you based on code complexity. Aside from code complexity, another metric to keep an eye out on is churn.  Churn, from what I understand, is the amount of times you edit a file.  If you keep on editing a file throughout a project&rsquo;s lifespan, you may not have a firm understanding on what that model/class/method should be doing.</p>

<p>Rich Kilmer spoke about Ruby Motion and Bluetooth 4 integration in Ruby Motion. Ruby Motion definitely seems 1.) capable and 2.) an emerging technology with an active community.  I definitely want to start writing some programs in it.  The second half of his talk was about Bluetooth 4:  BT4 is really a cool technology with a lot of cool potential.  We will start seeing more electronics and gadgets incorporating it, especially since iOS 7 is embracing more of the advanced capabilities of it.</p>

<p>Jim Gay spoke about DCI; this may have been one of the only talks that really went over my head.  DCI stands for Data-Context-Interaction.  On paper, I understand the basics of DCI.  I&rsquo;m just unsure of how to implement it in web development, and even if I should be worrying about that as a beginner.</p>

<p>Evan Light spoke, somewhat pessimistically, about the state of ruby and ROR.  He compared Rails' current state to where Java was leading up to the moment when people started leaving java for ruby. He spoke about how complex things are becoming and how the community seems to be making some dangerous choices on what gems and technologies are adopted.  Overall, it was pretty interesting; it was clear he really loves ruby and doesn&rsquo;t want it to see the same fate as java.</p>

<p>John Athayde spoke about design patterns.  I enjoyed his talk a lot.  He has an interesting background; he comes from, among other things, a career as an architect.  Developers, for good reasons, like to think of themselves as craftsman and engineers.  His talk focused on architectural theory that could be applied to development. Mainly, in architecture, there are common patterns (like in programming).  These patterns are not a template though, they are an answer to a problem. He also stressed that beginners should focus on code anti-patterns (code smells) rather than code patterns.  Otherwise, beginners will jump straight to copying a pattern when they might not.</p>

<p>A lot of the lightning talks were really well done.  One that sticks out was an introduction to devops. Basically, the speaker said that many people use the word wrong.  Devops is a culture of getting developers and system operators to work together and improve the final product.</p>

<p>Steve Klabnik spoke about taking over maintenance of an open source project under the worst conditions.  It was a good talk, but one thing I particularly enjoyed that he said was <em>getting</em> involved in an open source project as a beginner is not easy.  Many current developers that do open source work say that it is, but there are still barriers to knowing where to begin with it.  Moreover, he also spoke about the negative side of the open source community ~ high demands.  Many people expect your programming to be perfect, but 1.) they aren&rsquo;t committing to it and 2.) You aren&rsquo;t getting paid to do it.</p>

<p>Avdi Grimm ended RubyNation with an awesome talk on code and joy.  Two things that he talked about were 1.) the community and 2.) pair programming.  The ruby community is amazing.  My experience with this conference, and with all the resources online, really convinced me that there aren&rsquo;t many programming communities out there like this, let alone regular communities.  I felt so comfortable just going up to random strangers and introducing myself in a way that I have never before.</p>

<p>I am so thankful for the people organizing RubyNation; it was a great conference with well selected and engaging speakers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Nation, Day I]]></title>
    <link href="http://djquan.github.io/blog/2013/06/14/ruby-nation/"/>
    <updated>2013-06-14T16:53:00-04:00</updated>
    <id>http://djquan.github.io/blog/2013/06/14/ruby-nation</id>
    <content type="html"><![CDATA[<p>The first day of RubyNation is done, and I thought I&rsquo;d post some things I learned.</p>

<p>Sandi Metz did her talk on the magic tricks of testing; you really should check a <a href="http://www.confreaks.com/videos/2452-railsconf2013-the-magic-tricks-of-testing">version</a> of it out.  She, and her book, are amazing for programmers of any level.  This talk is solely on unit testing.  She stresses not over-testing and not repeating test coverage.</p>

<ul>
<li>Test that your objects, when they receive a query or command, respond to them appropriately.</li>
<li>Don&rsquo;t test private methods.  If you need to, don&rsquo;t get attached to them; delete them when they break.</li>
<li>Test that your object sends a particular command; not exactly the consequences of it as another object will test the side-effects.</li>
<li>Don&rsquo;t test methods that an object sends to itself. Don&rsquo;t test queries that an object sends to another.</li>
</ul>


<p>Really, check out her talk(and her book!).  It&rsquo;s quite good. I particularly like the analogy of objects as space capsules.</p>

<p>Russ Olsen launched RubyNation with an interesting talk on intuition and those &ldquo;Aha!&rdquo; moments. He talked a little bit about pair programming, including a nice little rule:</p>

<ul>
<li>if your pair and you are stuck, sit in quiet and don&rsquo;t type for two minutes while thinking through the problems.</li>
</ul>


<p>He also discussed another profession that works in pairs in the same manner: police officers. As a former police officer, I could definitely appreciate the comparison. For a lot of my time with the department, I worked directly with a partner.  We were much more effective as a team than independently.</p>

<p>Emily Stolfo had a nice <a href="http://www.confreaks.com/videos/2493-railsconf2013-hacking-the-academic-experience">talk</a> on hacking the academic experience where she listed five traits she tries to teach students:</p>

<ul>
<li>Use the internet as a textbook</li>
<li>Able to debug code you didn&rsquo;t write</li>
<li>Build something to solve a real-life problem</li>
<li>Engage with the community</li>
<li>Think critically about code</li>
</ul>


<p>There were a few other memorable talks. Bryan Helmkamp spoke about security in rails applications.  He recommends the <a href="http://brakemanscanner.org/">Brakeman gem</a> for checking vulnerabilities.  It reviews your code for common (but not all) vulnerabilities.</p>

<p>Two people spoke about doing DevOps on President Obama&rsquo;s re-election campaign. Learning about the technologies that went into the campaign was interesting.  It was more from the perspective of a system administrator than a developer, but I still found it helpful in understanding how sites scale.  I&rsquo;ve been focusing on code for the past four months, and it&rsquo;s easy to forget that code is run on machines.  Heroku is fine for playing around with and learning (and it&rsquo;s fine for production environments too), but there are other options and technical considerations when developing a site/application that will actually receive heavy traffic.</p>

<p>I learned a lot, and day two should be just as great. Some final thoughts</p>

<ul>
<li>Don&rsquo;t be afraid to say you&rsquo;re a complete beginner.  Most people are friendly and want to help.</li>
<li>There are a lot of freelancers out there making a living off contracts ~ Most said that it was really easy to get contracts.</li>
<li>Be friendly and introduce yourself to people.</li>
<li>I&rsquo;m doing better with imposter syndrome.  It&rsquo;s easy to think you don&rsquo;t have the skills to belong at the table, but everyone is learning something.  Some people happen to be learning more.</li>
<li>It wouldn&rsquo;t be the worst idea to take handwritten notes.</li>
</ul>


<p>Random unrelated vim tip:</p>

<p><code>vim Press ctrl-l after a search is complete to turn off highlighting. From Practical Vim.
nnoremap &lt;silent&gt; &lt;C-l&gt; :&lt;C-u&gt;nohlsearch&lt;CR&gt;&lt;C-l&gt;
</code></p>

<p><img src="https://dl.dropboxusercontent.com/u/6565481/rubynation.jpg" alt="RubyNation" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[progress]]></title>
    <link href="http://djquan.github.io/blog/2013/05/22/progress/"/>
    <updated>2013-05-22T17:47:00-04:00</updated>
    <id>http://djquan.github.io/blog/2013/05/22/progress</id>
    <content type="html"><![CDATA[<p>The RubyNation <a href="http://www.rubynation.org/schedule">Speaker List</a> looks amazing. Sandi Metz, Avdi Grimm, Russ Olsen, Steve Klabnik&hellip;I&rsquo;m definitely excited about it.</p>

<p>CoffeScript is a language that compiles into javascript.  The Code School course on CoffeeScript was a nice introduction to it, and it was also a good refresher on basic javascript.  The course has a lot of examples of translating from javascript and jquery into pure coffeescript, which I found really helpful.</p>

<p>There is a lot <a href="http://wekeroad.com/2012/03/21/coffeescript-or-straight-up-js-i-suck-either-way/">written</a> about the pros and cons of CoffeeScript weighed against pure JavaScript. I do like that CoffeeScript appears to be more similar in syntax to Ruby. I don&rsquo;t look it as a JavaScript vs CoffeeScript choice.  To write well in CoffeeScript, you need to have a firm understanding of basic JavaScript to debug errors and really understand what&rsquo;s going on.</p>

<p>Recently, I&rsquo;ve done a fair amount of coding(and blogging) using vim exclusively, and I&rsquo;ve been thrilled with how it&rsquo;s going.  I&rsquo;ve improved my efficiency by not having to switch windows to perform tests, rake tasks, or any other command line work.  Moreover, being able to work quickly without using the mouse at all is liberating.</p>

<p>I&rsquo;m still reading through <a href="http://pragprog.com/book/dnvim/practical-vim">Practical Vim</a>, and it&rsquo;s been a great resource so far. I still need to learn more about registers (vim&rsquo;s tools to copy and paste).  I also still need to find a snippet(ways of expanding text) solution that works well for me.  Still, I can&rsquo;t see myself moving away from vim+tmux anytime soon.</p>

<p>Log for 5/20 &ndash; 5/22</p>

<ul>
<li>Finished the Jumpstart Labs EventManager Tutorial</li>
<li>Thoughtbot &ndash; Test Driven Rails, Writing Unit Tests</li>
<li>Code School &ndash; Anatomy of Backbone.js Part 2</li>
<li>Code School &ndash; CoffeeScript</li>
</ul>

]]></content>
  </entry>
  
</feed>
